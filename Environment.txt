for fast api
cd A:\Project\GitHub_Chatbot
.\venv312\Scripts\activate
uvicorn app.main:app --workers 1
http://127.0.0.1:8000/docs#


for telegram bot
cd A:\Project\GitHub_Chatbot
.\venv312\Scripts\activate
python bot.py

Changes from local to docker:
in env file-> Mongo and API URI
in bot.py-> API_URI



for mongodb
cmd as administrator
net start MongoDB
new powershell
mongosh
use github_faq_chatbot
show collections
db.conversations.find().pretty()
db.users.find().pretty()
db.analytics.find().pretty()
db.logs.find().pretty()
for  deletion:
db.conversations.deleteMany({})
db.logs.deleteMany({})
db.analytics.deleteMany({})



docker
docker-compose down -v (Stop and remove all containers/volumes)
docker builder prune -af (Clear Docker's build cache)
docker-compose build
docker-compose build --no-cache --progress=plain
docker-compose up -d
docker-compose down
docker-compose logs -f bot
docker-compose logs -f api
docker-compose logs -f mongo


project structure
project/
└── .vscode/
├── .github/
│   ├── workflows/
|       ├──cd.yml 
|       ├──ci.yml
├── __pycache__/
├── app/
│   ├── __pycache__
│   └── data/
│       ├── models/
|               ├── all-MiniLM-L6-v2
|                       ├── all its files....
|               ├── t5-small
|                       ├── all its files....
|               ├── download_models.py
│       ├── Full_dataset.json     
│       ├── faq_lookup.json       
│       └── faq_index.index
│   ├── __init__.py
│   ├── faq_index.py
│   ├── logger.py
│   ├── main.py                 
└── venv312/
├── .dockerignore
├── .env
├── bot.py                                   
├── docker-compose.yaml
├── Dockerfile
├── entrypoint.sh
├── requirements.txt


git bash
firstly open git bash on the folder
do:
git init
git add .
git commit -m "Initial commit with all project files"